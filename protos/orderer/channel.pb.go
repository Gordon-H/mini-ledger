// Code generated by protoc-gen-go. DO NOT EDIT.
// source: channel.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChannelCreateTx struct {
	ChannelName          string          `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	Organizations        []*Organization `protobuf:"bytes,2,rep,name=organizations,proto3" json:"organizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ChannelCreateTx) Reset()         { *m = ChannelCreateTx{} }
func (m *ChannelCreateTx) String() string { return proto.CompactTextString(m) }
func (*ChannelCreateTx) ProtoMessage()    {}
func (*ChannelCreateTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8f385724121f37b, []int{0}
}

func (m *ChannelCreateTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelCreateTx.Unmarshal(m, b)
}
func (m *ChannelCreateTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelCreateTx.Marshal(b, m, deterministic)
}
func (m *ChannelCreateTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelCreateTx.Merge(m, src)
}
func (m *ChannelCreateTx) XXX_Size() int {
	return xxx_messageInfo_ChannelCreateTx.Size(m)
}
func (m *ChannelCreateTx) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelCreateTx.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelCreateTx proto.InternalMessageInfo

func (m *ChannelCreateTx) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *ChannelCreateTx) GetOrganizations() []*Organization {
	if m != nil {
		return m.Organizations
	}
	return nil
}

type Organization struct {
	OrgName              string   `protobuf:"bytes,1,opt,name=orgName,proto3" json:"orgName,omitempty"`
	MspInfo              []byte   `protobuf:"bytes,2,opt,name=mspInfo,proto3" json:"mspInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Organization) Reset()         { *m = Organization{} }
func (m *Organization) String() string { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()    {}
func (*Organization) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8f385724121f37b, []int{1}
}

func (m *Organization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Organization.Unmarshal(m, b)
}
func (m *Organization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Organization.Marshal(b, m, deterministic)
}
func (m *Organization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organization.Merge(m, src)
}
func (m *Organization) XXX_Size() int {
	return xxx_messageInfo_Organization.Size(m)
}
func (m *Organization) XXX_DiscardUnknown() {
	xxx_messageInfo_Organization.DiscardUnknown(m)
}

var xxx_messageInfo_Organization proto.InternalMessageInfo

func (m *Organization) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *Organization) GetMspInfo() []byte {
	if m != nil {
		return m.MspInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*ChannelCreateTx)(nil), "protos.ChannelCreateTx")
	proto.RegisterType((*Organization)(nil), "protos.Organization")
}

func init() { proto.RegisterFile("channel.proto", fileDescriptor_c8f385724121f37b) }

var fileDescriptor_c8f385724121f37b = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0x48, 0xcc,
	0xcb, 0x4b, 0xcd, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0xf9,
	0x5c, 0xfc, 0xce, 0x10, 0x09, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0xd4, 0x90, 0x0a, 0x21, 0x05, 0x2e,
	0x6e, 0xa8, 0x5a, 0xbf, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x64, 0x21,
	0x21, 0x2b, 0x2e, 0xde, 0xfc, 0xa2, 0xf4, 0xc4, 0xbc, 0xcc, 0xaa, 0xc4, 0x92, 0xcc, 0xfc, 0xbc,
	0x62, 0x09, 0x26, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x11, 0x88, 0xd9, 0xc5, 0x7a, 0xfe, 0x48, 0x92,
	0x41, 0xa8, 0x4a, 0x95, 0x9c, 0xb8, 0x78, 0x90, 0xa5, 0x85, 0x24, 0xb8, 0xd8, 0xf3, 0x8b, 0xd2,
	0x91, 0x6c, 0x82, 0x71, 0x41, 0x32, 0xb9, 0xc5, 0x05, 0x9e, 0x79, 0x69, 0xf9, 0x12, 0x4c, 0x0a,
	0x8c, 0x1a, 0x3c, 0x41, 0x30, 0x6e, 0x12, 0xc4, 0xf1, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x40, 0xf8, 0xd7, 0x73, 0xd4, 0x00, 0x00, 0x00,
}
